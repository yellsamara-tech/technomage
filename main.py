import os
import asyncio
from aiogram import Bot, Dispatcher, types
from aiogram.filters import Command
from db import init_db, add_user, get_user

BOT_TOKEN = os.getenv("BOT_TOKEN")
if not BOT_TOKEN:
    raise ValueError("‚ùå BOT_TOKEN –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è")

bot = Bot(token=BOT_TOKEN)
dp = Dispatcher()

@dp.message(Command("start"))
async def start_handler(message: types.Message):
    user = await get_user(message.from_user.id)
    if user:
        await message.answer(f"–¢—ã —É–∂–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω –∫–∞–∫: {user[1]}")
    else:
        await message.answer("–ü—Ä–∏–≤–µ—Ç! –í–≤–µ–¥–∏ —Å–≤–æ—ë –§–ò–û –¥–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏.")

@dp.message()
async def register_user(message: types.Message):
    user = await get_user(message.from_user.id)
    if user:
        await message.answer("–¢—ã —É–∂–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω üëç")
    else:
        full_name = message.text.strip()
        await add_user(message.from_user.id, full_name)
        await message.answer(f"‚úÖ –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–ª —Ç–µ–±—è –∫–∞–∫: {full_name}")

async def main():
    await init_db()
    await dp.start_polling(bot)

if __name__ == "__main__":
    asyncio.run(main())
